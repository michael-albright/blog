
.grid {
    position:relative;
    top: 56px;
    border: 1px black dotted;
    width: 100%;   
    height: 1200px;
    padding: 50px;
    background-color: coral;
    display: grid;
    grid-gap: 20px;
    grid-template: repeat(10, 100px 100px) / repeat(10, 100px 100px);
}
.attraction {
    background-color: beige;
    color:rgb(62, 110, 30);
    border: 2px red solid;
    border-radius: 15px;
    font-size: 20px;
    padding: 10px;
    text-align: center;
    overflow: scroll;
}
.a {
    grid-area: 1 / 2 / 3 / 8;
}
.b {
    grid-area: 3 / 1 / 5 / 7;
}
.c {
    grid-area: 5 / 3 / 6 / 9;
}
.d {
    grid-area: 6 / 1 / 8 / 8;
}
.e {
    grid-area: 8 / 2 / 9 / 9;
}
.f {
    grid-area: 9 / 3 / 10 / 8;
}
#foot {
    display: flex;
    flex-direction: row;
    align-items:center;
    text-align: center;
    width: 100%; 
    position:absolute;
}
#style {
    color:rgb(245, 72, 29);
    border-style:solid;
    border-color:rgb(62, 110, 30);
    border-width: medium;
    background-color: beige;

/*.flex-container {
    display: flex;
    background-color: DodgerBlue;
  }
  
  .flex-container > div {
    background-color: #f1f1f1;
    margin: 10px;
    padding: 20px;
    font-size: 30px;
  }








 grid-template: 40% 50% 50px / 100px 50% 200px; 
is the same as above. grids can be measured in %, 
px, ems, rems, and fr (fractions), repeat(..) can 
also be used to speed up the building process.
.blog {
    grid-template-columns: repeat(2, 20px 50px); 
    }
     would be repeating two columns, first column 
     20px, second column 50px. 
     minmax(..) will set minimum and maximum to a 
     grid box's size, use it as the sizing attribute.
     grid gaps are measdeured using grid-gap: 10px, 20px;
     10 is rows, 20  is columns. one # would specify both
      CHANGING BOX SIZES: The values that grid-row-start and grid-row-end 
      accept are grid lines. use grid-row-start: 1;/grid-row-end: 3; means line 1.
      shorthand is just grid-row: 1 / 3; ALSO grid-row: 1 / span 2;
      --grid-area takes four values separated by slashes. 
      The order is important! This is how grid-area will interpret those values.
            grid-row-start  grid-column-start   grid-row-end    grid-column-end 
      */